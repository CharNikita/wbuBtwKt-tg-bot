package com.efikay.wbubtw.domain.challenge

import com.efikay.wbubtw.domain.challenge.contest.ChallengeContest
import com.efikay.wbubtw.domain.challenge.contest.RandomChoiceContest
import com.efikay.wbubtw.domain.challenge.contest.RandomQuantifiedChoiceContest
import com.efikay.wbubtw.domain.challenge.contest.RandomQuantityContest
import com.efikay.wbubtw.shared.random.service.RandomService
import org.springframework.stereotype.Service

@Service
class ChallengeService(private val randomService: RandomService) {
    val challenges: List<ChallengeContest> = listOf(
        RandomQuantityContest(
            challengeId = ChallengeId.ICQ,
            displayName = "ICQ-challenge",
            getQuantity = { randomService.getRandomNumber(1..200) },
            displayDescription = "–ò–∑–º–µ—Ä—è–µ—Ç ICQ —Ç–æ—á–Ω–µ–µ –º–µ–Ω—Å—ã (–¥–æ–∫–∞–∑–∞–Ω–æ –±—Ä–∏—Ç–∞–Ω—Å–∫–∏–º–∏ —É—á–µ–Ω—ã–º–∏)",
            resultTemplates = hashMapOf(
                1..39 to listOf(
                    "–ù—É —Ç—ã –∏ –ª—É–∑–µ—Ä! %d IQ. –° —Ç–∞–∫–∏–º —Ç–æ–ª—å–∫–æ –≤ –¥–µ—Ä–µ–≤–µ–Ω–µ —Ñ–ª–µ–∫—Å–∏—Ç—å",
                    "–ú–æ–∏ —Å–æ–±–æ–ª–µ–∑–Ω–æ–≤–∞–Ω–∏—è... %d ICQ"
                ),
                40..79 to listOf("–ù—É —Ç–∞–∫–æ–µ... –®–æ —Å —Ç–µ–±—è –≤–∑—è—Ç—å... ü§§ %d IQ"),
                80..99 to listOf("%d IQ!"),
                100..119 to listOf("%d IQ!!"),
                120..159 to listOf("%d IQ!!!"),
                160..200 to listOf("–£ –≤–∞—Å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∏–π ICQ-level ‚Äì %d")
            )
        ),
        RandomQuantityContest(
            challengeId = ChallengeId.ASD,
            displayName = "–¢–µ—Å—Ç –Ω–∞ –∞—É—Ç–∏–∑–º",
            getQuantity = { randomService.getRandomNumber(1..100) },
            displayDescription = "–ê –µ—Å—Ç—å –ª–∏ —Å–º—ã—Å–ª –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è? –ù—É –Ω–∞–∂–º–∏",
            resultTemplates = hashMapOf(
                1..24 to listOf(
                    "–í—ã –Ω–µ –∞—É—Ç–∏—Å—Ç!",
                    "–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∞—É—Ç–∏–∑–º–∞ –æ—Ü–µ–Ω–µ–Ω –≤ %d%%"
                ),
                25..49 to listOf(
                    "–¢—ã –ø–æ—á—Ç–∏ –Ω–µ –∞—É—Ç–∏—Å—Ç... –¢–µ—Å—Ç –ø–æ–∫–∞–∑–∞–ª %d%%, –Ω—É –º–æ–∂–µ—à—å –Ω–µ –ø–∞—Ä–∏—Ç—å—Å—è"
                ),
                50..74 to listOf(
                    "–ú—ã –Ω–µ –º–æ–∂–µ–º —Ç–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –Ω–æ —É –≤–∞—Å –ø—Ä–∏–º–µ—Ä–Ω–æ 50-74%% –∞—É—Ç–∏–∑–º–∞. –ú–Ω–æ–≥–æ –ª–∏ –∏–ª–∏ –º–∞–ª–æ ‚Äì —Ä–µ—à–∞—Ç—å —Ç–µ–±–µ"
                ),
                75..100 to listOf(
                    "–ò–º–µ—é—Ç—Å—è —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –ø–æ–ª–∞–≥–∞—Ç—å —á—Ç–æ... –î—É–º–∞–π—Ç–µ"
                ),
            )
        ),
        RandomChoiceContest(
            challengeId = ChallengeId.KIKORIK,
            displayName = "–ö—Ç–æ —Ç—ã –∏–∑ —Å–º–µ—à–∞—Ä–∏–∫–æ–≤",
            displayDescription = "–ü—Ä–æ–≤–µ—Ä—å—Å—è! (–∏–ª–∏ –ë–∞—Ä–∞—à –ø–æ—Å—Ç—Ä–∞–¥–∞–µ—Ç)",
            choices = listOf(
                "–ù—é—à–∞ ‚Äì –º–∞–ª–µ–Ω—å–∫–∞—è —Å–≤–∏–Ω–∫–∞, –≤—Å–µ–≥–¥–∞ –≤ –ø–æ–∏—Å–∫–µ –Ω–æ–≤—ã—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –û–Ω–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞, —É–º–Ω–∞ –∏ –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–∞.",
                "–õ–æ—Å—è—à ‚Äì –ª–æ—Å—å, –∫–æ—Ç–æ—Ä—ã–π —á–∞—Å—Ç–æ –ø—É—Ç–∞–µ—Ç—Å—è –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º—ã—Å–ª—è—Ö. –û–Ω –¥–æ–±—Ä—ã–π –∏ –Ω–µ–º–Ω–æ–≥–æ —Å–æ–Ω–Ω—ã–π.",
                "–°–æ–≤—É–Ω—å—è ‚Äì —Å–æ–≤–∞, –æ–±–ª–∞–¥–∞—é—â–∞—è –æ—Å—Ç—Ä—ã–º —É–º–æ–º –∏ –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ–º. –û–Ω–∞ —á–∞—Å—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏.",
                "–ö–∞—Ä –ö–∞—Ä—ã—á ‚Äì –≤–æ—Ä–æ–Ω, –≤—Å–µ–≥–¥–∞ –≤ –ø–æ–∏—Å–∫–µ —á–µ–≥–æ-—Ç–æ –≤–∫—É—Å–Ω–æ–≥–æ. –û–Ω —Ö–∏—Ç—Ä—ã–π –∏ –∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª–µ–Ω.",
                "–ë–∞—Ä–∞—à ‚Äì –±–∞—Ä–∞—à–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç —Å–ø–∞—Ç—å –∏ –µ—Å—Ç—å. –û–Ω –¥–æ–±—Ä–æ–¥—É—à–Ω—ã–π –∏ –ª–µ–≥–∫–æ –ø–æ–¥–¥–∞–µ—Ç—Å—è –≤–ª–∏—è–Ω–∏—é –¥—Ä—É–≥–∏—Ö.",
                "–ü–∏–Ω ‚Äì –ø–∏–Ω–≥–≤–∏–Ω, –æ–±–ª–∞–¥–∞—é—â–∏–π —Ö–æ—Ä–æ—à–∏–º —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –û–Ω –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –¥—Ä—É–∑—å—è–º.",
                "–ö–æ–ø–∞—Ç—ã—á ‚Äì –º–µ–¥–≤–µ–¥—å, —Å–∏–ª—å–Ω—ã–π –∏ —É–º–µ–ª—ã–π. –û–Ω –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ —Å–≤–æ–∏—Ö –¥—Ä—É–∑—å—è—Ö –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –∑–∞—â–∏—Ç–∏—Ç—å –∏—Ö.",
            )
        ),
        RandomQuantityContest(
            challengeId = ChallengeId.BIG_O,
            displayName = "–°–∫–æ–ª—å–∫–æ —Ç—ã —É–∫—Ä–∞–ª –∫–æ–Ω—Å—Ç–∞–Ω—Ç –ø—Ä–∏ –û(n)",
            displayDescription = "–£–∑–Ω–∞–π —Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç —É –û-–±–æ–ª—å—à–æ–≥–æ —Ç—ã —É–∫—Ä–∞–ª",
            getQuantity = { randomService.getRandomNumber(0..100) },
            resultTemplates = hashMapOf(
                0..0 to listOf(
                    "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é ‚Äì –≤—ã –ú–∏—Ö–∞–∏–ª! –í—ã —É–∫—Ä–∞–ª–∏ %d –∫–æ–Ω—Å—Ç–∞–Ω—Ç",
                ),
                1..100 to listOf(
                    "–í—ã —É–∫—Ä–∞–ª–∏ %d –∫–æ–Ω—Å—Ç–∞–Ω—Ç!"
                ),
            )
        ),
        RandomQuantifiedChoiceContest(
            challengeId = ChallengeId.BAD,
            displayName = "–¢—Ä–∞–≤–ª—è",
            displayDescription = "–ü—Ä–æ–≤–µ—Ä—å—Å—è –Ω–∞ –Ω–µ–≥–∞—Ç–∏–≤ (–±–µ–∑ –Ω–µ–≥–∞—Ç–∏–≤–∞)",
            choicesWithTemplates = mapOf(
                "–¢—Ä–∞–≤–∏—Ç–µ–ª—å" to mapOf(
                    0..50 to listOf(
                        "–¢—ã —Ç—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–∞ %d%%! –ù–µ —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ —Ç–≤–æ–π –¥–µ–Ω—å"
                    ),
                    51..100 to listOf(
                        "–¢—ã —Å–µ–≥–æ–¥–Ω—è –≤ —É–¥–∞—Ä–µ! –¢–≤–æ—è —Ç—Ä–∞–≤–ª—è –æ—Ü–µ–Ω–µ–Ω–∞ –Ω–∞ %d%%!"
                    )
                ),
                "–ù–µ–π—Ç—Ä–∞–ª" to mapOf(
                    0..100 to listOf(
                        "–°–µ–≥–æ–¥–Ω—è —Ç—ã ‚Äì —Å–∞–º—ã–π —Å–∫—É—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –≤ —á–∞—Ç–µ.",
                        "–ù–∏ —Ä—ã–±–∞, –Ω–∏ –º—è—Å–æ.",
                        "–ß—Ç–æ? –ê–∞–∞–∞, —Ç—ã... –¢–µ–±–µ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—á–µ–º –≤—ã–¥–µ–ª–∏—Ç—å—Å—è, –æ–±—ã—á–Ω—ã–π NPC"
                    )
                ),
                "–ñ–µ—Ä—Ç–≤–∞ —Ç—Ä–∞–≤–ª–∏" to mapOf(
                    1..100 to listOf(
                        "–°–µ–≥–æ–¥–Ω—è –∑–∞—Ç—Ä–∞–≤–∏—Ç—å –º–æ–≥—É—Ç —Ä–∞–∑–≤–µ —á—Ç–æ —Ç–æ–ª—å–∫–æ —Ç–µ–±—è! –ë–µ—Ä–µ–≥–∏—Å—å",
                        "–°–µ–≥–æ–¥–Ω—è –Ω–∞ —Ç–µ–±—è –≤ —Å–µ–∫—Ä–µ—Ç–Ω–æ–º —á–∞—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∞ –æ—Ö–æ—Ç–∞!"
                    )
                )
            ),
            getQuantity = { randomService.getRandomNumber(1..100) },
        )
    )

    fun generateChallengeResults(): List<ChallengeResult> = challenges.map { it.execute() }
}